# render.yaml at the root of your repository

services:
  # API Service Definition
  - type: web # Web service
    name: api # Unique service name
    runtime: docker # Build from Dockerfile :contentReference[oaicite:0]{index=0}
    region: oregon
    plan: free
    dockerfilePath: Dockerfile.api

    envVars:
      - key: NODE_ENV
        value: production
      - key: MONGO_URL
        sync: false
      - key: JWT_SECRET
        sync: false
      - key: GROQ_API_KEY
        sync: false

    port: 4000 # Use singular `port` field, not `ports` :contentReference[oaicite:1]{index=1}

    disk:
      name: api-uploads
      mountPath: /app/uploads
      sizeGB: 1

    # Optional health check
    # healthCheckPath: /healthz

  # Client Service Definition
  - type: web
    name: client
    runtime: docker # Build from Dockerfile :contentReference[oaicite:2]{index=2}
    region: oregon
    plan: free
    dockerfilePath: Dockerfile.client

    envVars:
      # Example: point your React app at the internal API hostname
      - key: REACT_APP_API_URL
        value: http://api.internal.render.com

    port: 80 # Expose port 80, not `ports` :contentReference[oaicite:3]{index=3}


    # Optional health check
    # healthCheckPath: /status.html
